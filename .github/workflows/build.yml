name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RAILS_ENV: test
  REGISTRY: ghcr.io
  IMAGE_NAME: anansilva/blog

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: run ci
        env:
          CR_REGISTRY: ${{ env.REGISTRY }}
          CR_REPOSITORY: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: "ci"
        run: |
          docker pull $CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG || true
          IMAGE_CACHE_FROM=$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG \
          DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 \
            docker-compose -f docker-compose.ci.yml run ci
          docker push $CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      - name: deploy to heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME }}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
